"use strict";(self.webpackChunkModDocCE=self.webpackChunkModDocCE||[]).push([[778],{235:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Home","href":"/ModDocCE/","docId":"index","unlisted":false},{"type":"category","label":"File Formats","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"PAK files","href":"/ModDocCE/files/pak","docId":"files/pak","unlisted":false},{"type":"link","label":"HashLink bytecode (and hlboot.dat)","href":"/ModDocCE/files/hlboot","docId":"files/hlboot","unlisted":false},{"type":"link","label":"Save Files","href":"/ModDocCE/files/save","docId":"files/save","unlisted":false}],"href":"/ModDocCE/category/file-formats"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using crashlink","href":"/ModDocCE/tutorials/crashlink","docId":"tutorials/crashlink","unlisted":false},{"type":"link","label":"Unpacking and Repacking Game Files","href":"/ModDocCE/tutorials/pak_tutorial/","docId":"tutorials/pak_tutorial/pak_tutorial","unlisted":false}],"href":"/ModDocCE/category/tutorials"}]},"docs":{"files/hlboot":{"id":"files/hlboot","title":"HashLink bytecode (and hlboot.dat)","description":"Based on the documentation at the excellent hlbc wiki, and improved with information from the development of crashlink.","sidebar":"tutorialSidebar"},"files/pak":{"id":"files/pak","title":"PAK files","description":"PAK files are checksum-verified packages that contain a full filesystem structure inside them - they store all assets for the game. PAK files can be layered on top of each other - the game will first search for res.pak, then res1.pak, then res2.pak (etc.) while loading PAKs - PAKs are incrementally stacked on top of each other during the loading process - conflicts are ignored, and the PAK with the highest priority is used.","sidebar":"tutorialSidebar"},"files/save":{"id":"files/save","title":"Save Files","description":"This is Dead Cells\' specific binary save file format. It stores multiple serialised objects in a compressed format along with hashes to prevent corruption or tampering.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Home","description":"Welcome to ModDocCE - the community edition of the ubiquitous Dead Cells ModsDoc.pdf! This site is a community-driven effort to document the internals of Dead Cells and provide a comprehensive guide to modding the game in ways that are not covered by the official documentation, or are not covered in enough detail.","sidebar":"tutorialSidebar"},"tutorials/crashlink":{"id":"tutorials/crashlink","title":"Using crashlink","description":"crashlink is a new HashLink bytecode Swiss Army knife that allows you to easily (and programatically) load, save, modify, patch, decompile, and otherwise poke at compiled Haxe in HashLink. This page serves as a brief overview of how to install, run, and use crashlink intuitively on your computer.","sidebar":"tutorialSidebar"},"tutorials/pak_tutorial/pak_tutorial":{"id":"tutorials/pak_tutorial/pak_tutorial","title":"Unpacking and Repacking Game Files","description":"This guide serves to provide a very basic guide to unpacking and repacking the game\'s asset files (contained in res.pak).","sidebar":"tutorialSidebar"}}}}')}}]);